"""
* Author  => virus
* Version => 1.0.0
"""

import random
import re

"""
dsfd;kfoA,.iyewrkldJKDHSUBsgvca69834ncxv9873254k;fg87

d [0x64] s [0x73] f [0x66] d [0x64] ; [0x3b]
k [0x6b] f [0x66] o [0x6f] A [0x41] , [0x2c]
. [0x2e] i [0x69] y [0x79] e [0x65] w [0x77]
r [0x72] k [0x6b] l [0x6c] d [0x64] J [0x4a]
K [0x4b] D [0x44] H [0x48] S [0x53] U [0x55]
B [0x42] s [0x73] g [0x67] v [0x76] c [0x63]
a [0x61] 6 [0x36] 9 [0x39] 8 [0x38] 3 [0x33]
4 [0x34] n [0x6e] c [0x63] x [0x78] v [0x76]
9 [0x39] 8 [0x38] 7 [0x37] 3 [0x33] 2 [0x32]
5 [0x35] 4 [0x34] k [0x6b] ; [0x3b] f [0x66]
g [0x67] 8 [0x38] 7 [0x37]
"""

class CiscoPassword:
    def __init__(self, string:str):
        self.string = string

        # Table look-up translation
        self.xlat = [
            0x64, 0x73, 0x66, 0x64, 0x3b,
            0x6b, 0x66, 0x6f, 0x41, 0x2c,
            0x2e, 0x69, 0x79, 0x65, 0x77,
            0x72, 0x6b, 0x6c, 0x64, 0x4a,
            0x4b, 0x44, 0x48, 0x53, 0x55,
            0x42, 0x73, 0x67, 0x76, 0x63,
            0x61, 0x36, 0x39, 0x38, 0x33,
            0x34, 0x6e, 0x63, 0x78, 0x76,
            0x39, 0x38, 0x37, 0x33, 0x32,
            0x35, 0x34, 0x6b, 0x3b, 0x66,
            0x67, 0x38, 0x37
        ]

    def encrypt(self):
        salt = random.randint(0, 15)
        final_password = "%02d" % salt

        for i in range(len(self.string)):
            final_password += "%02x" % (ord(self.string[i]) ^ self.xlat[salt])

            salt += 1

            if salt == 51:
                salt = 0

        return final_password

    def decrypt(self):
        cipher = self.string
        decipher = ""

        regex = re.compile("(^[0-9A-Fa-f]{2})([0-9A-Fa-f]+)")

        result = regex.search(cipher)

        start, e = int(result.group(1)), result.group(2)

        for pos in range(0, len(e), 2):
            i = int(e[pos:pos + 2], 16)

            if start <= 50:
                char = "%c" % (i ^ self.xlat[start])
                start += 1

            if start == 51:
                start = 0

            decipher += char

        return decipher